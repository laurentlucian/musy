// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id
  createdAt    DateTime @default(now())
  updatedAt    DateTime @default(now()) @updatedAt
  accessToken  String
  refreshToken String
  expiresAt    Int
  tokenType    String

  user  Profile?
  party Party[]


  Queue       Queue[]
  Recommended Recommended[]
}

model Profile {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique

  name        String
  email       String
  image       String
  party       Party?
  recommended Recommended[]
  Queue       Queue[]
}

model Party {
  owner        User   @relation(fields: [ownerId], references: [id])
  ownerId      String
  currentTrack String

  user      Profile @relation(fields: [userId], references: [userId])
  userId    String  @unique
  userName  String
  userImage String

  assignedAt DateTime @default(now())
  @@id([ownerId, userId])
}

model Queue {
  id      String @id @default(uuid())
  owner   User   @relation(fields: [ownerId], references: [id])
  ownerId String

  createdAt DateTime @default(now())
  trackName String
  image     String
  artist    String
  explicit  Boolean


  Profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?
  queuerId  String?
}

model Recommended {
  id        String   @id @default(uuid())
  owner     User     @relation(fields: [ownerId], references: [id])
  ownerId   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  name      String
  trackName String
  image     String
  artist    String
  explicit  Boolean
  comment   String

  Recommender   Profile? @relation(fields: [recommenderId], references: [id])
  recommenderId Int?
}
