model Track {
  id          String          @id @unique
  uri         String
  name        String
  image       String
  albumUri    String
  albumName   String
  artist      String
  artistUri   String
  explicit    Boolean
  preview_url String?
  link        String
  duration    Int
  //
  queue       Queue[]
  liked       LikedSongs[]
  recent      RecentSongs[]
  playback    Playback[]
  recommended Recommended[]
  playlists   PlaylistTrack[]
}

model Playback {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  //
  user      Profile  @relation(fields: [userId], references: [id])
  userId    String   @unique
  //
  track     Track    @relation(fields: [trackId], references: [id])
  trackId   String
  //
  timestamp BigInt   @default(0) // timestamp from spotify response
  progress  Int
}

model PlaybackHistory {
  id        Int      @id @default(autoincrement())
  startedAt DateTime @default(now())
  endedAt   DateTime @default(now())
  //
  user      Profile  @relation(fields: [userId], references: [id])
  userId    String
  //
  feed      Feed?    @relation(fields: [feedId], references: [id])
  feedId    Int?     @unique
}

model RecentSongs {
  id        Int       @id @default(autoincrement())
  playedAt  DateTime  @default(now())
  //
  track     Track     @relation(fields: [trackId], references: [id])
  trackId   String
  //
  user      Profile   @relation(fields: [userId], references: [id])
  userId    String
  action    String    @default("recent")
  session   Sessions? @relation(fields: [sessionId], references: [id])
  sessionId Int?

  @@unique([playedAt, userId])
}

model LikedSongs {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  //
  track     Track    @relation(fields: [trackId], references: [id])
  trackId   String
  //
  user      Profile  @relation(fields: [userId], references: [id])
  userId    String
  action    String   @default("liked")
  feed      Feed?    @relation(fields: [feedId], references: [id])
  feedId    Int?     @unique

  @@unique([trackId, userId])
}
